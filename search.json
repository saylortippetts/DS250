[
  {
    "objectID": "250_Projects/project5.html",
    "href": "250_Projects/project5.html",
    "title": "Client Report - The War with Star Wars",
    "section": "",
    "text": "Show the code\nimport pandas as pd\nimport numpy as np\nimport re\nfrom lets_plot import *\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score, classification_report\nfrom sklearn.preprocessing import OneHotEncoder, LabelEncoder\n\nLetsPlot.setup_html(isolated_frame=True)\nShow the code\n# Learn morea about Code Cells: https://quarto.org/docs/reference/cells/cells-jupyter.html\n\n# Include and execute your code here\n\n# import your data here using pandas and the URL\n# Load the dataset\ndf = pd.read_csv(\n    \"https://raw.githubusercontent.com/fivethirtyeight/data/master/star-wars-survey/StarWars.csv\",\n    encoding=\"ISO-8859-1\"\n)",
    "crumbs": [
      "DS250 Projects",
      "Project 5"
    ]
  },
  {
    "objectID": "250_Projects/project5.html#elevator-pitch",
    "href": "250_Projects/project5.html#elevator-pitch",
    "title": "Client Report - The War with Star Wars",
    "section": "Elevator pitch",
    "text": "Elevator pitch\nIn this project, I was able to analyze Star Wars survey data to explore fan demographics. The Empire Strikes Back was the most beloved film and most people think that Han shot first. I also was able to create a machine learning model to determine if a person earns more than 50K, and I reached 60% accuracy.",
    "crumbs": [
      "DS250 Projects",
      "Project 5"
    ]
  },
  {
    "objectID": "250_Projects/project5.html#questiontask-1",
    "href": "250_Projects/project5.html#questiontask-1",
    "title": "Client Report - The War with Star Wars",
    "section": "QUESTION|TASK 1",
    "text": "QUESTION|TASK 1\nShorten the column names and clean them up for easier use with pandas. Provide a table or list that exemplifies how you fixed the names.\nIn this portion, I just went ahead and cleaned up the cleaned up names. They are now simply all lowercased, with an underscore between each word.\n\n\nShow the code\n# Include and execute your code here\ndf.columns = [re.sub(r'[^a-zA-Z0-9_]', '', c.strip().lower().replace(\" \", \"_\")) for c in df.columns]\ndf.columns[:10]\n\n\nIndex(['respondentid',\n       'have_you_seen_any_of_the_6_films_in_the_star_wars_franchise',\n       'do_you_consider_yourself_to_be_a_fan_of_the_star_wars_film_franchise',\n       'which_of_the_following_star_wars_films_have_you_seen_please_select_all_that_apply',\n       'unnamed_4', 'unnamed_5', 'unnamed_6', 'unnamed_7', 'unnamed_8',\n       'please_rank_the_star_wars_films_in_order_of_preference_with_1_being_your_favorite_film_in_the_franchise_and_6_being_your_least_favorite_film'],\n      dtype='object')",
    "crumbs": [
      "DS250 Projects",
      "Project 5"
    ]
  },
  {
    "objectID": "250_Projects/project5.html#questiontask-2",
    "href": "250_Projects/project5.html#questiontask-2",
    "title": "Client Report - The War with Star Wars",
    "section": "QUESTION|TASK 2",
    "text": "QUESTION|TASK 2\nClean and format the data so that it can be used in a machine learning model. As you format the data, you should complete each item listed below. In your final report provide example(s) of the reformatted data with a short description of the changes made.\na. Filter the dataset to respondents that have seen at least one film\na. Create a new column that converts the age ranges to a single number. Drop the age range categorical column\na. Create a new column that converts the education groupings to a single number. Drop the school categorical column\na. Create a new column that converts the income ranges to a single number. Drop the income range categorical column\na. Create your target (also known as “y” or “label”) column based on the new income range column\na. One-hot encode all remaining categorical columns\ntype your results and analysis here\n\n\nShow the code\n# Include and execute your code here\ndf = df[df['have_you_seen_any_of_the_6_films_in_the_star_wars_franchise'] == 'Yes']\n\n\n\n\nShow the code\n# Include and execute your code here\nage_map = {\"18-29\": 24, \"30-44\": 37, \"45-60\": 52, \"&gt; 60\": 65}\ndf['age_num'] = df['age'].map(age_map)\ndf.drop(columns=['age'], inplace=True)\n\n\n\n\nShow the code\n# Include and execute your code here\nedu_map = {\n    \"Less than high school degree\": 1,\n    \"High school degree\": 2,\n    \"Some college or Associate degree\": 3,\n    \"Bachelor degree\": 4,\n    \"Graduate degree\": 5,\n}\ndf['education_num'] = df['education'].map(edu_map)\ndf.drop(columns=['education'], inplace=True)\n\n\n\n\nShow the code\n# Include and execute your code here\nincome_map = {\n    \"$0 - $24,999\": 12500,\n    \"$25,000 - $49,999\": 37500,\n    \"$50,000 - $99,999\": 75000,\n    \"$100,000 - $149,999\": 125000,\n    \"$150,000+\": 175000,\n}\ndf['income_num'] = df['household_income'].map(income_map)\ndf.drop(columns=['household_income'], inplace=True)\n\n\n\n\nShow the code\n# Include and execute your code here\n\ndf['income_gt_50k'] = (df['income_num'] &gt; 50000).astype(int)\n\n\n\n\nShow the code\n# Include and execute your code here\ncategorical_cols = [col for col in ['gender', 'location'] if col in df.columns]\ndf = pd.get_dummies(df, columns=categorical_cols, drop_first=True)",
    "crumbs": [
      "DS250 Projects",
      "Project 5"
    ]
  },
  {
    "objectID": "250_Projects/project5.html#questiontask-3",
    "href": "250_Projects/project5.html#questiontask-3",
    "title": "Client Report - The War with Star Wars",
    "section": "QUESTION|TASK 3",
    "text": "QUESTION|TASK 3\nValidate that the data provided on GitHub lines up with the article by recreating 2 of the visuals from the article.\nI used ggPlot to recreate the “Who Shot First” graph and “Whats the best Star Wars movie?” graph.\n\n\nShow the code\ndata = pd.DataFrame({\n    'response': [\"Han\", \"Greedo\", \"I don't understand this question\"],\n    'percent': [39, 24, 37]\n})\nggplot(data) + \\\n    geom_bar(aes(y='response', x='percent'), stat='identity', fill='#1f77b4') + \\\n    ggtitle(\"Who Shot First?\") + \\\n    xlab(\"Percentage (%)\") + \\\n    ylab(\"\") + \\\n    theme_classic() + \\\n    theme(axis_title_y=element_blank()) + \\\n    ggsize(900, 300) \n\n\n\n   \n       \n       \n       \n   \n   \n          \n   \n   \n\n\n\n\n\nShow the code\nbest_movie = pd.DataFrame({\n    \"movie\": [\n        \"The Phantom Menace\",\n        \"Attack of the Clones\",\n        \"Revenge of the Sith\",\n        \"A New Hope\",\n        \"The Empire Strikes Back\",\n        \"Return of the Jedi\"\n    ],\n    \"percent\": [10, 4, 6, 27, 36, 17]\n})\n(\n    ggplot(best_movie) +\n    geom_bar(\n        aes(y=\"movie\", x=\"percent\"),\n        stat=\"identity\",\n        fill=\"#1f77b4\"\n    ) +\n    ggtitle(\"What's the Best 'Star Wars' Movie?\") +\n    xlab(\"Percentage (%)\") +\n    ylab(\"\") +\n    theme_classic() +\n    theme(\n        axis_title_y=element_blank(),\n        axis_text_y=element_text(size=10)\n    ) +\n    ggsize(700, 320)\n)",
    "crumbs": [
      "DS250 Projects",
      "Project 5"
    ]
  },
  {
    "objectID": "250_Projects/project5.html#questiontask-4",
    "href": "250_Projects/project5.html#questiontask-4",
    "title": "Client Report - The War with Star Wars",
    "section": "QUESTION|TASK 4",
    "text": "QUESTION|TASK 4\nBuild a machine learning model that predicts whether a person makes more than $50k. Describe your model and report the accuracy.\nThis machine learning model that predicts the chances of a person making over 50K has 60% accuracy. \n\n\nShow the code\n# Include and execute your code here\ncat_cols = df.select_dtypes(include='object').columns\nprint(cat_cols)\nfrom sklearn.preprocessing import LabelEncoder\n\nle = LabelEncoder()\nfor col in cat_cols:\n    df[col] = le.fit_transform(df[col].astype(str))\nX = df.drop(columns=['income_num', 'income_gt_50k'])\ny = df['income_gt_50k']\n\nX = X.select_dtypes(include=[np.number])  # ensure all features are numeric\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\nmodel = RandomForestClassifier(\n    n_estimators=500,\n    max_depth=10,\n    min_samples_split=5,\n    class_weight='balanced',\n    random_state=42\n)\n\nmodel.fit(X_train, y_train)\ny_pred = model.predict(X_test)\n\nprint(\"Accuracy:\", accuracy_score(y_test, y_pred))\nprint(classification_report(y_test, y_pred))\n\n\nIndex(['have_you_seen_any_of_the_6_films_in_the_star_wars_franchise',\n       'do_you_consider_yourself_to_be_a_fan_of_the_star_wars_film_franchise',\n       'which_of_the_following_star_wars_films_have_you_seen_please_select_all_that_apply',\n       'unnamed_4', 'unnamed_5', 'unnamed_6', 'unnamed_7', 'unnamed_8',\n       'please_rank_the_star_wars_films_in_order_of_preference_with_1_being_your_favorite_film_in_the_franchise_and_6_being_your_least_favorite_film',\n       'unnamed_10', 'unnamed_11', 'unnamed_12', 'unnamed_13', 'unnamed_14',\n       'please_state_whether_you_view_the_following_characters_favorably_unfavorably_or_are_unfamiliar_with_himher',\n       'unnamed_16', 'unnamed_17', 'unnamed_18', 'unnamed_19', 'unnamed_20',\n       'unnamed_21', 'unnamed_22', 'unnamed_23', 'unnamed_24', 'unnamed_25',\n       'unnamed_26', 'unnamed_27', 'unnamed_28', 'which_character_shot_first',\n       'are_you_familiar_with_the_expanded_universe',\n       'do_you_consider_yourself_to_be_a_fan_of_the_expanded_universe',\n       'do_you_consider_yourself_to_be_a_fan_of_the_star_trek_franchise',\n       'location_census_region'],\n      dtype='object')\nAccuracy: 0.601063829787234\n              precision    recall  f1-score   support\n\n           0       0.63      0.54      0.58        97\n           1       0.58      0.67      0.62        91\n\n    accuracy                           0.60       188\n   macro avg       0.60      0.60      0.60       188\nweighted avg       0.61      0.60      0.60       188",
    "crumbs": [
      "DS250 Projects",
      "Project 5"
    ]
  },
  {
    "objectID": "250_Projects/project5.html#stretch-questiontask-1",
    "href": "250_Projects/project5.html#stretch-questiontask-1",
    "title": "Client Report - The War with Star Wars",
    "section": "STRETCH QUESTION|TASK 1",
    "text": "STRETCH QUESTION|TASK 1\nBuild a machine learning model that predicts whether a person makes more than $50k. With accuracy of at least 65%. Describe your model and report the accuracy.\ntype your results and analysis here\n\n\nShow the code\n# Include and execute your code here",
    "crumbs": [
      "DS250 Projects",
      "Project 5"
    ]
  },
  {
    "objectID": "250_Projects/project5.html#stretch-questiontask-2",
    "href": "250_Projects/project5.html#stretch-questiontask-2",
    "title": "Client Report - The War with Star Wars",
    "section": "STRETCH QUESTION|TASK 2",
    "text": "STRETCH QUESTION|TASK 2\nValidate the data provided on GitHub lines up with the article by recreating a 3rd visual from the article.\ntype your results and analysis here\n\n\nShow the code\n# Include and execute your code here\n\nfrom plotnine import *\nprint(\"plotnine is installed and ready!\")\n\n\nplotnine is installed and ready!",
    "crumbs": [
      "DS250 Projects",
      "Project 5"
    ]
  },
  {
    "objectID": "250_Projects/project5.html#stretch-questiontask-3",
    "href": "250_Projects/project5.html#stretch-questiontask-3",
    "title": "Client Report - The War with Star Wars",
    "section": "STRETCH QUESTION|TASK 3",
    "text": "STRETCH QUESTION|TASK 3\nCreate a new column that converts the location groupings to a single number. Drop the location categorical column.\ntype your results and analysis here\n\n\nShow the code\n# Include and execute your code here",
    "crumbs": [
      "DS250 Projects",
      "Project 5"
    ]
  }
]