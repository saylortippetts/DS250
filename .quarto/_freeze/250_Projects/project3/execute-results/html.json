{
  "hash": "66d7fc7aa320c077dd28ba3909b43e75",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Client Report - Late Flights & Missing Data (JSON)\"\nsubtitle: \"Course DS 250\"\nauthor: \"[STUDENT NAME]\"\nformat:\n  html:\n    self-contained: true\n    page-layout: full\n    title-block-banner: true\n    toc: true\n    toc-depth: 3\n    toc-location: body\n    number-sections: false\n    html-math-method: katex\n    code-fold: true\n    code-summary: \"Show the code\"\n    code-overflow: wrap\n    code-copy: hover\n    code-tools:\n        source: false\n        toggle: true\n        caption: See code\nexecute: \n  warning: false\n    \n---\n\n::: {#bb84b593 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd \nimport numpy as np\nimport sqlite3\nfrom lets_plot import *\n\nLetsPlot.setup_html(isolated_frame=True)\n```\n:::\n\n\n::: {#818a80a9 .cell execution_count=2}\n``` {.python .cell-code}\n# Learn morea about Code Cells: https://quarto.org/docs/reference/cells/cells-jupyter.html\n\n# Include and execute your code here\nsqlite_file = 'lahmansbaseballdb.sqlite'\n# this file must be in the same location as your .qmd or .py file\ncon = sqlite3.connect(sqlite_file)\n```\n:::\n\n\n## Elevator pitch\n_A SHORT (2-3 SENTENCES) PARAGRAPH THAT `DESCRIBES KEY INSIGHTS` TAKEN FROM METRICS IN THE PROJECT RESULTS THINK TOP OR MOST IMPORTANT RESULTS._ (Note: this is not a summary of the project, but a summary of the results.)\n\n_A Client has requested this analysis and this is your one shot of what you would say to your boss in a 2 min elevator ride before he takes your report and hands it to the client._\n\n## QUESTION|TASK 1\n\n__Write an SQL query to create a new dataframe about baseball players who attended BYU-Idaho. The new table should contain five columns: playerID, schoolID, salary, and the yearID/teamID associated with each salary. Order the table by salary (highest to lowest) and print out the table in your report.__  \n\n_type your results and analysis here_\n\n::: {#3227c362 .cell execution_count=3}\n``` {.python .cell-code}\n# Include and execute your code here\n\n```\n:::\n\n\n## QUESTION|TASK 2\n\n__This three-part question requires you to calculate batting average (number of hits divided by the number of at-bats)__  \n    a. Write an SQL query that provides playerID, yearID, and batting average for players with at least 1 at bat that year. Sort the table from highest batting average to lowest, and then by playerid alphabetically. Show the top 5 results in your report.  \n    a. Use the same query as above, but only include players with at least 10 at bats that year. Print the top 5 results.  \n    a. Now calculate the batting average for players over their entire careers (all years combined). Only include players with at least 100 at bats, and print the top 5 results.  \n\n_type your results and analysis here_\n\n::: {#3d3fef45 .cell execution_count=4}\n``` {.python .cell-code}\n# Include and execute your code here\n\n```\n:::\n\n\n::: {#70795363 .cell execution_count=5}\n``` {.python .cell-code}\n# Include and execute your code here\n\n```\n:::\n\n\n::: {#9eac3259 .cell execution_count=6}\n``` {.python .cell-code}\n# Include and execute your code here\n\n```\n:::\n\n\n## QUESTION|TASK 3\n\n__Pick any two baseball teams and compare them using a metric of your choice (average salary, home runs, number of wins, etc). Write an SQL query to get the data you need, then make a graph using Lets-Plot to visualize the comparison. What do you learn?__\n\n_type your results and analysis here_\n\n::: {#9a9e46b4 .cell execution_count=7}\n``` {.python .cell-code}\n# Include and execute your code here\n```\n:::\n\n\n---\n\n## STRETCH QUESTION|TASK 1\n\n__Advanced Salary Distribution by Position (with Case Statement):__  \n\n    * Write an SQL query that provides a summary table showing the average salary for players in each position (e.g., pitcher, catcher, outfielder) across all years. Include the following columns:\n\n        * position\n        * average_salary\n        * total_players\n        * highest_salary  \n\n    * The highest_salary column should display the highest salary ever earned by a player in that position. If no player in that position has a recorded salary, display “N/A” for the highest salary.  \n\n    * Additionally, create a new column called salary_category using a case statement:  \n\n        * If the average salary is above $1 million, categorize it as “High Salary.”  \n        * If the average salary is between $500,000 and $1 million, categorize it as “Medium Salary.”  \n        * Otherwise, categorize it as “Low Salary.”  \n\n    * Order the table by average salary in descending order.\n    * Print the top 10 rows of this summary table.  \n\n_type your results and analysis here_\n\n::: {#fc09817e .cell execution_count=8}\n``` {.python .cell-code}\n# Include and execute your code here\n\n```\n:::\n\n\n## STRETCH QUESTION|TASK 2\n\n__Advanced Career Longevity and Performance (with Subqueries):__\n\n    * Calculate the average career length (in years) for players who have played at least one game. Then, identify the top 10 players with the longest careers (based on the number of years they played). Include their:  \n\n        * playerID\n        * first_name\n        * last_name\n        * career_length\n\n    * The career_length should be calculated as the difference between the maximum and minimum yearID for each player. \n\n_type your results and analysis here_\n\n::: {#78f0842a .cell execution_count=9}\n``` {.python .cell-code}\n# Include and execute your code here\n\n```\n:::\n\n\n---\n\n",
    "supporting": [
      "project3_files"
    ],
    "filters": [],
    "includes": {}
  }
}