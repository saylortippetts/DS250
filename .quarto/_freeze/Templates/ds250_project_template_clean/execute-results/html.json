{
  "hash": "abf28eea39f18df9e5032a646b7ef3be",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Client Report - [Insert Project Title]\"\nsubtitle: \"Course DS 250\"\nauthor: \"[STUDENT NAME]\"\nformat:\n  html:\n    self-contained: true\n    page-layout: full\n    title-block-banner: true\n    toc: true\n    toc-depth: 3\n    toc-location: body\n    number-sections: false\n    html-math-method: katex\n    code-fold: true\n    code-summary: \"Show the code\"\n    code-overflow: wrap\n    code-copy: hover\n    code-tools:\n        source: false\n        toggle: true\n        caption: See code\nexecute: \n  warning: false\n    \n---\n\n\n## Elevator pitch\n\n_paste your elevator pitch here_\n_A SHORT (4-5 SENTENCES) PARAGRAPH THAT `DESCRIBES KEY INSIGHTS` TAKEN FROM METRICS IN THE PROJECT RESULTS THINK TOP OR MOST IMPORTANT RESULTS._\n\n::: {#project-data .cell execution_count=2}\n``` {.python .cell-code code-summary=\"Read and format project data\"}\n# Learn morea about Code Cells: https://quarto.org/docs/reference/cells/cells-jupyter.html\n\n# Include and execute your code here\ndf = pd.read_csv(\"https://github.com/byuidatascience/data4names/raw/master/data-raw/names_year/names_year.csv\")\n```\n:::\n\n\n__Highlight the Questions and Tasks__\n\n## QUESTION|TASK 1\n\n__COPY PASTE QUESTION|TASK 1 FROM THE PROJECT HERE__\n\n_type your results and analysis here_\n\n::: {#q1 .cell execution_count=3}\n``` {.python .cell-code code-summary=\"Read and format data\"}\n# Include and execute your code here\n\n```\n:::\n\n\n_include figures in chunks and discuss your findings in the figure._\n\n::: {#cell-Q1-chart .cell execution_count=4}\n``` {.python .cell-code code-summary=\"plot example\"}\n# Include and execute your code here\n(\n  ggplot(df.head(200), aes(x='name', y='AK')) + geom_bar(stat='identity')\n)\n```\n\n::: {#q1-chart .cell-output .cell-output-display execution_count=4}\n```{=html}\n<html lang=\"en\">\n   <head>\n       <meta charset=\"UTF-8\">\n       <style> html, body { margin: 0; padding: 0; } </style>\n       <script type=\"text/javascript\" data-lets-plot-script=\"library\" src=\"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.6.2/js-package/distr/lets-plot.min.js\"></script>\n   </head>\n   <body>\n          <div id=\"RKvFZR\"></div>\n   <script type=\"text/javascript\" data-lets-plot-script=\"plot\">\n   \n   (function() {\n   // ----------\n   \n   const forceImmediateRender = false;\n   const responsive = false;\n   \n   let sizing = {\n       width_mode: \"MIN\",\n       height_mode: \"SCALED\",\n       width: null, \n       height: null \n   };\n   \n   const preferredWidth = document.body.dataset.letsPlotPreferredWidth;\n   if (preferredWidth !== undefined) {\n       sizing = {\n           width_mode: 'FIXED',\n           height_mode: 'SCALED',\n           width: parseFloat(preferredWidth)\n       };\n   }\n   \n   const containerDiv = document.getElementById(\"RKvFZR\");\n   let fig = null;\n   \n   function renderPlot() {\n       if (fig === null) {\n           const plotSpec = {\n\"data\":{\n\"name\":[\"Aaden\",\"Aaden\",\"Aaden\",\"Aaden\",\"Aaden\",\"Aaden\",\"Aaden\",\"Aaden\",\"Aaden\",\"Aaden\",\"Aadhya\",\"Aadhya\",\"Aadhya\",\"Aadhya\",\"Aadhya\",\"Aadhya\",\"Aadhya\",\"Aaliyah\",\"Aaliyah\",\"Aaliyah\",\"Aaliyah\",\"Aaliyah\",\"Aaliyah\",\"Aaliyah\",\"Aaliyah\",\"Aaliyah\",\"Aaliyah\",\"Aaliyah\",\"Aaliyah\",\"Aaliyah\",\"Aaliyah\",\"Aaliyah\",\"Aaliyah\",\"Aaliyah\",\"Aaliyah\",\"Aaliyah\",\"Aaliyah\",\"Aaliyah\",\"Aaliyah\",\"Aaliyah\",\"Aaliyah\",\"Aaliyah\",\"Aaliyah\",\"Aaliyah\",\"Aaliyah\",\"Aamir\",\"Aamir\",\"Aamir\",\"Aamir\",\"Aamir\",\"Aamir\",\"Aamir\",\"Aamir\",\"Aamir\",\"Aamir\",\"Aamir\",\"Aamir\",\"Aamir\",\"Aamir\",\"Aamir\",\"Aamir\",\"Aamir\",\"Aamir\",\"Aamir\",\"Aamir\",\"Aamir\",\"Aamir\",\"Aamir\",\"Aamir\",\"Aanya\",\"Aanya\",\"Aanya\",\"Aanya\",\"Aanya\",\"Aanya\",\"Aanya\",\"Aanya\",\"Aanya\",\"Aanya\",\"Aanya\",\"Aanya\",\"Aanya\",\"Aanya\",\"Aanya\",\"Aarav\",\"Aarav\",\"Aarav\",\"Aarav\",\"Aarav\",\"Aarav\",\"Aarav\",\"Aarav\",\"Aarav\",\"Aarav\",\"Aarav\",\"Aarav\",\"Aarav\",\"Aarna\",\"Aarna\",\"Aarna\",\"Aarna\",\"Aarna\",\"Aarna\",\"Aarna\",\"Aarna\",\"Aarna\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\",\"Aaron\"],\n\"AK\":[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5.0,0.0,5.0,7.0,10.0,10.0,9.0,7.0,14.0,10.0,13.0,8.0,12.0,12.0,11.0,12.0,10.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.0,0.0,0.0,5.0,7.0,0.0,0.0,0.0,0.0,6.0,6.0,9.0,8.0,17.0,26.0,37.0,23.0,33.0,42.0,41.0,35.0,53.0,54.0,52.0,55.0,59.0,54.0,54.0,62.0,61.0,58.0,60.0,44.0,56.0,57.0,55.0,35.0,42.0,30.0,35.0,33.0,29.0,24.0,25.0,22.0,29.0,22.0,10.0]\n},\n\"mapping\":{\n\"x\":\"name\",\n\"y\":\"AK\"\n},\n\"data_meta\":{\n\"series_annotations\":[{\n\"type\":\"str\",\n\"column\":\"name\"\n},{\n\"type\":\"int\",\n\"column\":\"year\"\n},{\n\"type\":\"float\",\n\"column\":\"AK\"\n},{\n\"type\":\"float\",\n\"column\":\"AL\"\n},{\n\"type\":\"float\",\n\"column\":\"AR\"\n},{\n\"type\":\"float\",\n\"column\":\"AZ\"\n},{\n\"type\":\"float\",\n\"column\":\"CA\"\n},{\n\"type\":\"float\",\n\"column\":\"CO\"\n},{\n\"type\":\"float\",\n\"column\":\"CT\"\n},{\n\"type\":\"float\",\n\"column\":\"DC\"\n},{\n\"type\":\"float\",\n\"column\":\"DE\"\n},{\n\"type\":\"float\",\n\"column\":\"FL\"\n},{\n\"type\":\"float\",\n\"column\":\"GA\"\n},{\n\"type\":\"float\",\n\"column\":\"HI\"\n},{\n\"type\":\"float\",\n\"column\":\"IA\"\n},{\n\"type\":\"float\",\n\"column\":\"ID\"\n},{\n\"type\":\"float\",\n\"column\":\"IL\"\n},{\n\"type\":\"float\",\n\"column\":\"IN\"\n},{\n\"type\":\"float\",\n\"column\":\"KS\"\n},{\n\"type\":\"float\",\n\"column\":\"KY\"\n},{\n\"type\":\"float\",\n\"column\":\"LA\"\n},{\n\"type\":\"float\",\n\"column\":\"MA\"\n},{\n\"type\":\"float\",\n\"column\":\"MD\"\n},{\n\"type\":\"float\",\n\"column\":\"ME\"\n},{\n\"type\":\"float\",\n\"column\":\"MI\"\n},{\n\"type\":\"float\",\n\"column\":\"MN\"\n},{\n\"type\":\"float\",\n\"column\":\"MO\"\n},{\n\"type\":\"float\",\n\"column\":\"MS\"\n},{\n\"type\":\"float\",\n\"column\":\"MT\"\n},{\n\"type\":\"float\",\n\"column\":\"NC\"\n},{\n\"type\":\"float\",\n\"column\":\"ND\"\n},{\n\"type\":\"float\",\n\"column\":\"NE\"\n},{\n\"type\":\"float\",\n\"column\":\"NH\"\n},{\n\"type\":\"float\",\n\"column\":\"NJ\"\n},{\n\"type\":\"float\",\n\"column\":\"NM\"\n},{\n\"type\":\"float\",\n\"column\":\"NV\"\n},{\n\"type\":\"float\",\n\"column\":\"NY\"\n},{\n\"type\":\"float\",\n\"column\":\"OH\"\n},{\n\"type\":\"float\",\n\"column\":\"OK\"\n},{\n\"type\":\"float\",\n\"column\":\"OR\"\n},{\n\"type\":\"float\",\n\"column\":\"PA\"\n},{\n\"type\":\"float\",\n\"column\":\"RI\"\n},{\n\"type\":\"float\",\n\"column\":\"SC\"\n},{\n\"type\":\"float\",\n\"column\":\"SD\"\n},{\n\"type\":\"float\",\n\"column\":\"TN\"\n},{\n\"type\":\"float\",\n\"column\":\"TX\"\n},{\n\"type\":\"float\",\n\"column\":\"UT\"\n},{\n\"type\":\"float\",\n\"column\":\"VA\"\n},{\n\"type\":\"float\",\n\"column\":\"VT\"\n},{\n\"type\":\"float\",\n\"column\":\"WA\"\n},{\n\"type\":\"float\",\n\"column\":\"WI\"\n},{\n\"type\":\"float\",\n\"column\":\"WV\"\n},{\n\"type\":\"float\",\n\"column\":\"WY\"\n},{\n\"type\":\"float\",\n\"column\":\"Total\"\n}]\n},\n\"kind\":\"plot\",\n\"scales\":[],\n\"layers\":[{\n\"geom\":\"bar\",\n\"stat\":\"identity\",\n\"mapping\":{\n},\n\"data_meta\":{\n},\n\"data\":{\n}\n}],\n\"metainfo_list\":[],\n\"spec_id\":\"1\"\n};\n           fig = LetsPlot.buildPlotFromProcessedSpecs(plotSpec, containerDiv, sizing);\n       } else {\n           fig.updateView({});\n       }\n   }\n   \n   const renderImmediately = \n       forceImmediateRender || (\n           sizing.width_mode === 'FIXED' && \n           (sizing.height_mode === 'FIXED' || sizing.height_mode === 'SCALED')\n       );\n   \n   if (renderImmediately) {\n       renderPlot();\n   }\n   \n   if (!renderImmediately || responsive) {\n       // Set up observer for initial sizing or continuous monitoring\n       var observer = new ResizeObserver(function(entries) {\n           for (let entry of entries) {\n               if (entry.contentBoxSize && \n                   entry.contentBoxSize[0].inlineSize > 0) {\n                   if (!responsive && observer) {\n                       observer.disconnect();\n                       observer = null;\n                   }\n                   renderPlot();\n                   if (!responsive) {\n                       break;\n                   }\n               }\n           }\n       });\n       \n       observer.observe(containerDiv);\n   }\n   \n   // ----------\n   })();\n   \n   </script>\n   </body>\n</html>\n```\n\nMy useless chart\n:::\n:::\n\n\n::: {#cell-Q1-table .cell .tbl-cap-location-top tbl-cap='Not much of a table' execution_count=5}\n``` {.python .cell-code code-summary=\"table example\"}\n# Include and execute your code here\nmydat = (df.head(1000)\n    .groupby('year')\n    .sum()\n    .reset_index()\n    .tail(10)\n    .filter([\"year\", \"AK\",\"AR\"])\n)\ndisplay(mydat)\n```\n\n::: {#q1-table .cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>year</th>\n      <th>AK</th>\n      <th>AR</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>96</th>\n      <td>2006</td>\n      <td>21.0</td>\n      <td>183.0</td>\n    </tr>\n    <tr>\n      <th>97</th>\n      <td>2007</td>\n      <td>28.0</td>\n      <td>153.0</td>\n    </tr>\n    <tr>\n      <th>98</th>\n      <td>2008</td>\n      <td>36.0</td>\n      <td>212.0</td>\n    </tr>\n    <tr>\n      <th>99</th>\n      <td>2009</td>\n      <td>34.0</td>\n      <td>179.0</td>\n    </tr>\n    <tr>\n      <th>100</th>\n      <td>2010</td>\n      <td>22.0</td>\n      <td>196.0</td>\n    </tr>\n    <tr>\n      <th>101</th>\n      <td>2011</td>\n      <td>41.0</td>\n      <td>148.0</td>\n    </tr>\n    <tr>\n      <th>102</th>\n      <td>2012</td>\n      <td>28.0</td>\n      <td>140.0</td>\n    </tr>\n    <tr>\n      <th>103</th>\n      <td>2013</td>\n      <td>26.0</td>\n      <td>134.0</td>\n    </tr>\n    <tr>\n      <th>104</th>\n      <td>2014</td>\n      <td>20.0</td>\n      <td>114.0</td>\n    </tr>\n    <tr>\n      <th>105</th>\n      <td>2015</td>\n      <td>28.0</td>\n      <td>121.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## QUESTION|TASK 2\n\n__COPY PASTE QUESTION|TASK 2 FROM THE PROJECT HERE__\n\n_type your results and analysis here_\n\n::: {#q2 .cell execution_count=6}\n``` {.python .cell-code code-summary=\"Read and format data\"}\n# Include and execute your code here\n\n```\n:::\n\n\n_include figures in chunks and discuss your findings in the figure._\n\n::: {#q2-chart .cell execution_count=7}\n``` {.python .cell-code code-summary=\"plot example\"}\n# Include and execute your code here\n# (\n#   ggplot(df.head(200), aes(x='name', y='AK')) + geom_bar(stat='identity')\n# )\n```\n:::\n\n\n::: {#q2-table .cell .tbl-cap-location-top tbl-cap='Not much of a table' execution_count=8}\n``` {.python .cell-code code-summary=\"table example\"}\n# Include and execute your code here\n# mydat = df.head(1000)\\\n#     .groupby('year')\\\n#     .sum()\\\n#     .reset_index()\\\n#     .tail(10)\\\n#     .filter([\"year\", \"AK\",\"AR\"])\n\n# display(mydat)\n```\n:::\n\n\n## QUESTION|TASK 3\n\n__COPY PASTE QUESTION|TASK 3 FROM THE PROJECT HERE__\n\n_type your results and analysis here_\n\n::: {#q3 .cell execution_count=9}\n``` {.python .cell-code code-summary=\"Read and format data\"}\n# Include and execute your code here\n\n```\n:::\n\n\n_include figures in chunks and discuss your findings in the figure._\n\n::: {#q3-chart .cell execution_count=10}\n``` {.python .cell-code code-summary=\"plot example\"}\n# Include and execute your code here\n# Include and execute your code here\n# (\n#   ggplot(df.head(200), aes(x='name', y='AK')) + geom_bar(stat='identity')\n# )\n```\n:::\n\n\n::: {#q3-table .cell .tbl-cap-location-top tbl-cap='Not much of a table' execution_count=11}\n``` {.python .cell-code code-summary=\"table example\"}\n# Include and execute your code here\n# mydat = df.head(1000)\\\n#     .groupby('year')\\\n#     .sum()\\\n#     .reset_index()\\\n#     .tail(10)\\\n#     .filter([\"year\", \"AK\",\"AR\"])\n\n# display(mydat)\n```\n:::\n\n\n## QUESTION|TASK 4\n\n__COPY PASTE QUESTION|TASK 3 FROM THE PROJECT HERE__\n\n_type your results and analysis here_\n\n::: {#q4 .cell execution_count=12}\n``` {.python .cell-code code-summary=\"Read and format data\"}\n# Include and execute your code here\n\n```\n:::\n\n\n_include figures in chunks and discuss your findings in the figure._\n\n::: {#q4-chart .cell execution_count=13}\n``` {.python .cell-code code-summary=\"plot example\"}\n# Include and execute your code here\n# Include and execute your code here\n# (\n#   ggplot(df.head(200), aes(x='name', y='AK')) + geom_bar(stat='identity')\n# )\n```\n:::\n\n\n::: {#q4-table .cell .tbl-cap-location-top tbl-cap='Not much of a table' execution_count=14}\n``` {.python .cell-code code-summary=\"table example\"}\n# Include and execute your code here\n# mydat = df.head(1000)\\\n#     .groupby('year')\\\n#     .sum()\\\n#     .reset_index()\\\n#     .tail(10)\\\n#     .filter([\"year\", \"AK\",\"AR\"])\n\n# display(mydat)\n```\n:::\n\n\n## QUESTION|TASK 5\n\n__COPY PASTE QUESTION|TASK 3 FROM THE PROJECT HERE__\n\n_type your results and analysis here_\n\n::: {#q5 .cell execution_count=15}\n``` {.python .cell-code code-summary=\"Read and format data\"}\n# Include and execute your code here\n\n```\n:::\n\n\n_include figures in chunks and discuss your findings in the figure._\n\n::: {#q5-chart .cell execution_count=16}\n``` {.python .cell-code code-summary=\"plot example\"}\n# Include and execute your code here\n# Include and execute your code here\n# (\n#   ggplot(df.head(200), aes(x='name', y='AK')) + geom_bar(stat='identity')\n# )\n```\n:::\n\n\n::: {#q5-table .cell .tbl-cap-location-top tbl-cap='Not much of a table' execution_count=17}\n``` {.python .cell-code code-summary=\"table example\"}\n# Include and execute your code here\n# mydat = df.head(1000)\\\n#     .groupby('year')\\\n#     .sum()\\\n#     .reset_index()\\\n#     .tail(10)\\\n#     .filter([\"year\", \"AK\",\"AR\"])\n\n# display(mydat)\n```\n:::\n\n\n",
    "supporting": [
      "ds250_project_template_clean_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}